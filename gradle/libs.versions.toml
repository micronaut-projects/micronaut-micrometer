[versions]
micronaut-platform = "4.3.4"
micronaut = "4.3.9"
micronaut-docs = "2.0.0"
micronaut-test = "4.2.0"
micronaut-gradle-plugin = "4.3.4"
groovy = "4.0.15"
spock = "2.3-groovy-4.0"

managed-metrics-core = '4.2.25'
managed-micrometer = '1.12.4'
managed-micrometer-tracing = '1.2.3'
managed-new-relic-registry = '0.10.0'
reflections = '0.10.2'

jcache = "1.1.1"
hdr-histogram = '2.1.12'

micronaut-aws = "4.4.2"
micronaut-cache = "4.2.2"
micronaut-grpc = "4.3.0"
micronaut-logging = "1.2.2"
micronaut-r2dbc = "5.3.0"
micronaut-rxjava2 = "2.2.1"
micronaut-reactor = '3.2.1'
micronaut-serde = "2.8.1"
micronaut-sql = "5.5.1"
micronaut-validation = "4.4.3"

[libraries]
# Core
micronaut-core = { module = 'io.micronaut:micronaut-core-bom', version.ref = 'micronaut' }
micronaut-platform = { module = 'io.micronaut.platform:micronaut-platform', version.ref = 'micronaut-platform' }

micronaut-validation = { module = "io.micronaut.validation:micronaut-validation-bom", version.ref = "micronaut-validation" }
micronaut-aws = { module = "io.micronaut.aws:micronaut-aws-bom", version.ref = "micronaut-aws" }
micronaut-cache = { module = "io.micronaut.cache:micronaut-cache-bom", version.ref = "micronaut-cache" }
micronaut-grpc = { module = "io.micronaut.grpc:micronaut-grpc-bom", version.ref = "micronaut-grpc" }
micronaut-r2dbc = { module = "io.micronaut.r2dbc:micronaut-r2dbc-bom", version.ref = "micronaut-r2dbc" }
micronaut-rxjava2 = { module = "io.micronaut.rxjava2:micronaut-rxjava2-bom", version.ref = "micronaut-rxjava2" }
micronaut-reactor = { module = 'io.micronaut.reactor:micronaut-reactor-bom', version.ref = 'micronaut-reactor'}
micronaut-serde = { module = "io.micronaut.serde:micronaut-serde-bom", version.ref = "micronaut-serde" }
micronaut-sql = { module = "io.micronaut.sql:micronaut-sql-bom", version.ref = "micronaut-sql" }
groovy-json = { module = "org.apache.groovy:groovy-json" }

boms-micrometer = { module = 'io.micrometer:micrometer-bom', version.ref = 'managed-micrometer' }
grpc-api = { module = 'io.grpc:grpc-api' }
hdr-histogram = { module = 'org.hdrhistogram:HdrHistogram', version.ref = 'hdr-histogram' }

managed-metrics-core = { module = 'io.dropwizard.metrics:metrics-core', version.ref = 'managed-metrics-core' }
managed-micrometer-registry-new-relic-telemetry = { module = 'com.newrelic.telemetry:micrometer-registry-new-relic', version.ref = 'managed-new-relic-registry' }
managed-micrometer-core = { module = 'io.micrometer:micrometer-core', version.ref = 'managed-micrometer' }
managed-micrometer-tracing = { module = 'io.micrometer:micrometer-tracing', version.ref = 'managed-micrometer-tracing' }
managed-micrometer-observation = { module = 'io.micrometer:micrometer-observation', version.ref = 'managed-micrometer' }
managed-micrometer-observation-test = { module = 'io.micrometer:micrometer-observation-test', version.ref = 'managed-micrometer' }

micrometer-registry-appoptics = { module = 'io.micrometer:micrometer-registry-appoptics', version.ref = 'managed-micrometer' }
micrometer-registry-atlas = { module = 'io.micrometer:micrometer-registry-atlas', version.ref = 'managed-micrometer' }
micrometer-registry-azure-monitor = { module = 'io.micrometer:micrometer-registry-azure-monitor', version.ref = 'managed-micrometer' }
micrometer-registry-cloudwatch2 = { module = 'io.micrometer:micrometer-registry-cloudwatch2', version.ref = 'managed-micrometer' }
micrometer-registry-datadog = { module = 'io.micrometer:micrometer-registry-datadog', version.ref = 'managed-micrometer' }
micrometer-registry-dynatrace = { module = 'io.micrometer:micrometer-registry-dynatrace', version.ref = 'managed-micrometer' }
micrometer-registry-elastic = { module = 'io.micrometer:micrometer-registry-elastic', version.ref = 'managed-micrometer' }
micrometer-registry-ganglia = { module = 'io.micrometer:micrometer-registry-ganglia', version.ref = 'managed-micrometer' }
micrometer-registry-graphite = { module = 'io.micrometer:micrometer-registry-graphite', version.ref = 'managed-micrometer' }
micrometer-registry-humio = { module = 'io.micrometer:micrometer-registry-humio', version.ref = 'managed-micrometer' }
micrometer-registry-influx = { module = 'io.micrometer:micrometer-registry-influx', version.ref = 'managed-micrometer' }
micrometer-registry-jmx = { module = 'io.micrometer:micrometer-registry-jmx', version.ref = 'managed-micrometer' }
micrometer-registry-kairos = { module = 'io.micrometer:micrometer-registry-kairos', version.ref = 'managed-micrometer' }
micrometer-registry-new-relic = { module = 'io.micrometer:micrometer-registry-new-relic', version.ref = 'managed-micrometer' }
micrometer-registry-prometheus = { module = 'io.micrometer:micrometer-registry-prometheus', version.ref = 'managed-micrometer' }
micrometer-registry-signalfx = { module = 'io.micrometer:micrometer-registry-signalfx', version.ref = 'managed-micrometer' }
micrometer-registry-stackdriver = { module = 'io.micrometer:micrometer-registry-stackdriver', version.ref = 'managed-micrometer' }
micrometer-registry-statsd = { module = 'io.micrometer:micrometer-registry-statsd', version.ref = 'managed-micrometer' }
micrometer-registry-wavefront = { module = 'io.micrometer:micrometer-registry-wavefront', version.ref = 'managed-micrometer' }

r2dbc-pool = { module = 'io.r2dbc:r2dbc-pool' }
reflections = { module = 'org.reflections:reflections', version.ref = 'reflections' }

jcache = { module = "javax.cache:cache-api", version.ref = "jcache" }
gradle-micronaut = { module = "io.micronaut.gradle:micronaut-gradle-plugin", version.ref = "micronaut-gradle-plugin" }
