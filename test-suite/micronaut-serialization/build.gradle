plugins {
    id 'io.micronaut.build.internal.micrometer-module'
}



dependencies {
    annotationProcessor(libs.micronaut.inject.java)
    annotationProcessor(libs.micronaut.graal)
    annotationProcessor(libs.micronaut.docs.asciidoc.config.props)

    api(libs.micrometer.core)
    api(libs.micronaut.inject)
    testImplementation project(":micrometer-core")

    testAnnotationProcessor project(":micrometer-annotation")
    testAnnotationProcessor(libs.micronaut.inject.java)
    testImplementation(libs.micronaut.management)
    testImplementation(libs.micronaut.inject.groovy)
    testImplementation(libs.micronaut.function.web)
    testRuntimeOnly(libs.micronaut.http.server.netty)
    testImplementation(libs.micronaut.http.client)
    testImplementation(libs.groovy.json)
    testImplementation(libs.netty.buffer)
    testImplementation(libs.netty.transport)
    testImplementation(libs.netty.transport.native.epoll)
    testImplementation(libs.netty.transport.native.kqueue)
    testImplementation(libs.micronaut.http.server.netty)
    testImplementation(libs.grpc.api)
}

configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute(module("io.micronaut:micronaut-jackson-databind"))
                .using(module("io.micronaut.serde:micronaut-serde-jackson:$micronautSerializationVersion"))
    }
}
